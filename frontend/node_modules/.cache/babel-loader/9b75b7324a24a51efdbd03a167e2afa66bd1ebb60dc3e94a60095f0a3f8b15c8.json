{"ast":null,"code":"import axios from 'axios';\nimport { TRADING_DATA_REQUEST, TRADING_DATA_SUCCESS, TRADING_DATA_FAIL, TRADING_CHART_REQUEST, TRADING_CHART_SUCCESS, TRADING_CHART_FAIL, WALLET_INFO_REQUEST, WALLET_INFO_SUCCESS, WALLET_INFO_FAIL } from '../constants/tradingConstants';\nexport const tradingBot = id => async dispatch => {\n  try {\n    dispatch({\n      type: TRADING_DATA_REQUEST,\n      id: id\n    });\n    const {\n      data\n    } = await axios.get(`/api/tradingData/${id}`);\n    dispatch({\n      type: TRADING_DATA_SUCCESS,\n      payload: data,\n      id: id\n    });\n  } catch (error) {\n    dispatch({\n      type: TRADING_DATA_FAIL,\n      id: id,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\n\n// Chart data\nexport const tradingBotChart = idParams => async dispatch => {\n  try {\n    dispatch({\n      type: TRADING_CHART_REQUEST,\n      idParams: idParams\n    });\n    const {\n      data\n    } = await axios.get(`/api/tradingChart/${idParams}`);\n    dispatch({\n      type: TRADING_CHART_SUCCESS,\n      payload: data,\n      idParams: idParams\n    });\n  } catch (error) {\n    dispatch({\n      type: TRADING_CHART_FAIL,\n      idParams: idParams,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\n\n// Wallet info\nexport const tradingWalletInfo = (apiKey, secretKey) => async dispatch => {\n  try {\n    dispatch({\n      type: WALLET_INFO_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/tradingWalletInfo/?apiKey=${apiKey}&secretKey=${secretKey}`);\n    dispatch({\n      type: WALLET_INFO_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: WALLET_INFO_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\n\n// Send bot params to backend\nexport const tradingBotStart = params => async dispatch => {\n  try {\n    dispatch({\n      type: WALLET_INFO_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/tradingStart/?market=${params['market']}&timeframe=${params['timeframe']}&rsiBuy=${params['rsiBuy']}&rsiSell=${params['rsiSell']}&moveAvgFast=${params['moveAvgFast']}&moveAvgSlow=${params['moveAvgSlow']}&marginSell=${params['marginSell']}&percToSell=${params['percToSell']}`);\n    dispatch({\n      type: WALLET_INFO_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: WALLET_INFO_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","TRADING_DATA_REQUEST","TRADING_DATA_SUCCESS","TRADING_DATA_FAIL","TRADING_CHART_REQUEST","TRADING_CHART_SUCCESS","TRADING_CHART_FAIL","WALLET_INFO_REQUEST","WALLET_INFO_SUCCESS","WALLET_INFO_FAIL","tradingBot","id","dispatch","type","data","get","payload","error","response","detail","message","tradingBotChart","idParams","tradingWalletInfo","apiKey","secretKey","tradingBotStart","params"],"sources":["D:/FUN/Full-Stack/ecommerce/frontend/src/actions/tradingBotActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n    TRADING_DATA_REQUEST,\r\n    TRADING_DATA_SUCCESS,\r\n    TRADING_DATA_FAIL,\r\n\r\n    TRADING_CHART_REQUEST,\r\n    TRADING_CHART_SUCCESS,\r\n    TRADING_CHART_FAIL,\r\n\r\n    WALLET_INFO_REQUEST,\r\n    WALLET_INFO_SUCCESS,\r\n    WALLET_INFO_FAIL\r\n} from '../constants/tradingConstants'\r\n\r\n\r\nexport const tradingBot = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: TRADING_DATA_REQUEST , id: id})\r\n        const { data } = await axios.get(`/api/tradingData/${id}`)\r\n\r\n        dispatch({\r\n            type: TRADING_DATA_SUCCESS,\r\n            payload: data,\r\n            id: id\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TRADING_DATA_FAIL,\r\n            id: id,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,           \r\n        })\r\n    }\r\n}\r\n\r\n// Chart data\r\nexport const tradingBotChart = (idParams) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: TRADING_CHART_REQUEST , idParams: idParams})\r\n        const { data } = await axios.get(`/api/tradingChart/${idParams}`)\r\n\r\n        dispatch({\r\n            type: TRADING_CHART_SUCCESS,\r\n            payload: data,\r\n            idParams: idParams\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TRADING_CHART_FAIL,\r\n            idParams: idParams,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,           \r\n        })\r\n    }\r\n}\r\n\r\n// Wallet info\r\nexport const tradingWalletInfo = (apiKey, secretKey) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: WALLET_INFO_REQUEST})\r\n        const { data } = await axios.get(\r\n            `/api/tradingWalletInfo/?apiKey=${apiKey}&secretKey=${secretKey}`\r\n            )\r\n\r\n        dispatch({\r\n            type: WALLET_INFO_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: WALLET_INFO_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,           \r\n        })\r\n    }\r\n}\r\n\r\n// Send bot params to backend\r\nexport const tradingBotStart = (params) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: WALLET_INFO_REQUEST})\r\n        const { data } = await axios.get(\r\n            `/api/tradingStart/?market=${params['market']}&timeframe=${params['timeframe']}&rsiBuy=${params['rsiBuy']}&rsiSell=${params['rsiSell']}&moveAvgFast=${params['moveAvgFast']}&moveAvgSlow=${params['moveAvgSlow']}&marginSell=${params['marginSell']}&percToSell=${params['percToSell']}`\r\n            )\r\n\r\n        dispatch({\r\n            type: WALLET_INFO_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: WALLET_INFO_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,           \r\n        })\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}