{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n// import { map as d3Map } from \"d3-collection\";\n\nexports.discontinuousTimeScaleProviderBuilder = discontinuousTimeScaleProviderBuilder;\nvar _d3TimeFormat = require(\"d3-time-format\");\nvar _financeDiscontinuousScale = require(\"./financeDiscontinuousScale\");\nvar _financeDiscontinuousScale2 = _interopRequireDefault(_financeDiscontinuousScale);\nvar _utils = require(\"../utils\");\nvar _levels = require(\"./levels\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction evaluateLevel(d, date, i, formatters) {\n  return _levels.levelDefinition.map(function (eachLevel, idx) {\n    return {\n      level: _levels.levelDefinition.length - idx - 1,\n      format: formatters[eachLevel(d, date, i)]\n    };\n  }).find(function (l) {\n    return !!l.format;\n  });\n}\nvar discontinuousIndexCalculator = (0, _utils.slidingWindow)().windowSize(2).undefinedValue(function (d, idx, _ref) {\n  var initialIndex = _ref.initialIndex,\n    formatters = _ref.formatters;\n  var i = initialIndex;\n  var row = {\n    date: d.getTime(),\n    startOf30Seconds: false,\n    startOfMinute: false,\n    startOf5Minutes: false,\n    startOf15Minutes: false,\n    startOf30Minutes: false,\n    startOfHour: false,\n    startOfEighthOfADay: false,\n    startOfQuarterDay: false,\n    startOfHalfDay: false,\n    startOfDay: true,\n    startOfWeek: false,\n    startOfMonth: false,\n    startOfQuarter: false,\n    startOfYear: false\n  };\n  var level = evaluateLevel(row, d, i, formatters);\n  return _extends({}, row, {\n    index: i\n  }, level);\n});\nvar discontinuousIndexCalculatorLocalTime = discontinuousIndexCalculator.accumulator(function (_ref2, i, idx, _ref3) {\n  var _ref4 = _slicedToArray(_ref2, 2),\n    prevDate = _ref4[0],\n    nowDate = _ref4[1];\n  var initialIndex = _ref3.initialIndex,\n    formatters = _ref3.formatters;\n  var startOf30Seconds = nowDate.getSeconds() % 30 === 0;\n  var startOfMinute = nowDate.getMinutes() !== prevDate.getMinutes();\n  var startOf5Minutes = startOfMinute && nowDate.getMinutes() % 5 <= prevDate.getMinutes() % 5;\n  var startOf15Minutes = startOfMinute && nowDate.getMinutes() % 15 <= prevDate.getMinutes() % 15;\n  var startOf30Minutes = startOfMinute && nowDate.getMinutes() % 30 <= prevDate.getMinutes() % 30;\n  var startOfHour = nowDate.getHours() !== prevDate.getHours();\n  var startOfEighthOfADay = startOfHour && nowDate.getHours() % 3 === 0;\n  var startOfQuarterDay = startOfHour && nowDate.getHours() % 6 === 0;\n  var startOfHalfDay = startOfHour && nowDate.getHours() % 12 === 0;\n  var startOfDay = nowDate.getDay() !== prevDate.getDay();\n  // According to ISO calendar\n  // Sunday = 0, Monday = 1, ... Saturday = 6\n  // day of week of today < day of week of yesterday then today is start of week\n  var startOfWeek = nowDate.getDay() < prevDate.getDay();\n  // month of today != month of yesterday then today is start of month\n  var startOfMonth = nowDate.getMonth() !== prevDate.getMonth();\n  // if start of month and month % 3 === 0 then it is start of quarter\n  var startOfQuarter = startOfMonth && nowDate.getMonth() % 3 <= prevDate.getMonth() % 3;\n  // year of today != year of yesterday then today is start of year\n  var startOfYear = nowDate.getFullYear() !== prevDate.getFullYear();\n  var row = {\n    date: nowDate.getTime(),\n    startOf30Seconds: startOf30Seconds,\n    startOfMinute: startOfMinute,\n    startOf5Minutes: startOf5Minutes,\n    startOf15Minutes: startOf15Minutes,\n    startOf30Minutes: startOf30Minutes,\n    startOfHour: startOfHour,\n    startOfEighthOfADay: startOfEighthOfADay,\n    startOfQuarterDay: startOfQuarterDay,\n    startOfHalfDay: startOfHalfDay,\n    startOfDay: startOfDay,\n    startOfWeek: startOfWeek,\n    startOfMonth: startOfMonth,\n    startOfQuarter: startOfQuarter,\n    startOfYear: startOfYear\n  };\n  var level = evaluateLevel(row, nowDate, i, formatters);\n  if (level == null) {\n    console.log(row);\n  }\n  return _extends({}, row, {\n    index: i + initialIndex\n  }, level);\n});\nfunction doStuff(realDateAccessor, inputDateAccessor, initialIndex, formatters) {\n  return function (data) {\n    var dateAccessor = realDateAccessor(inputDateAccessor);\n    var calculate = discontinuousIndexCalculatorLocalTime.source(dateAccessor).misc({\n      initialIndex: initialIndex,\n      formatters: formatters\n    });\n    var index = calculate(data).map(function (each) {\n      var format = each.format;\n      return {\n        // ...each,\n        index: each.index,\n        level: each.level,\n        date: new Date(each.date),\n        format: (0, _d3TimeFormat.timeFormat)(format)\n      };\n    });\n    /*\n    var map = d3Map();\n    for (var i = 0; i < data.length - 1; i++) {\n    \t\tvar nextDate = dateAccessor(data[i + 1]);\n    \tvar nowDate = dateAccessor(data[i]);\n    \tvar diff = nextDate - nowDate;\n    \t\tif (map.has(diff)) {\n    \t\tvar count = parseInt(map.get(diff), 10) + 1;\n    \t\tmap.set(diff, count);\n    \t} else {\n    \t\tmap.set(diff, 1);\n    \t}\n    }\n    \tvar entries = map.entries().sort((a, b) => a.value < b.value);\n    \t// For Renko/p&f\n    \tvar interval = entries[0].value === 1\n    \t? Math.round((dateAccessor(last(data)) - dateAccessor(head(data))) / data.length)\n    \t: parseInt(entries[0].key, 10); */\n\n    // return { index, interval };\n    return {\n      index: index\n    };\n  };\n}\nfunction discontinuousTimeScaleProviderBuilder() {\n  var initialIndex = 0,\n    realDateAccessor = _utils.identity;\n  var inputDateAccessor = function inputDateAccessor(d) {\n      return d.date;\n    },\n    indexAccessor = function indexAccessor(d) {\n      return d.idx;\n    },\n    indexMutator = function indexMutator(d, idx) {\n      return _extends({}, d, {\n        idx: idx\n      });\n    },\n    withIndex = void 0;\n  var currentFormatters = _levels.defaultFormatters;\n\n  // eslint-disable-next-line prefer-const\n  var discontinuousTimeScaleProvider = function discontinuousTimeScaleProvider(data) {\n    /*\n    console.warn(\"Are you sure you want to use a discontinuousTimeScale?\"\n    \t+ \" Use this only if you have discontinuous data which\"\n    \t+ \" needs to be displayed as continuous.\"\n    \t+ \" If you have continuous data use a d3 scale like\"\n    \t+ \" `d3.scaleTime`\"\n    );\n    */\n\n    var index = withIndex;\n    if ((0, _utils.isNotDefined)(index)) {\n      var response = doStuff(realDateAccessor, inputDateAccessor, initialIndex, currentFormatters)(data);\n      index = response.index;\n    }\n    // console.log(interval, entries[0].key);\n\n    var inputIndex = index;\n    var xScale = (0, _financeDiscontinuousScale2.default)(inputIndex);\n    var mergedData = (0, _utils.zipper)().combine(indexMutator);\n    var finalData = mergedData(data, inputIndex);\n    return {\n      data: finalData,\n      xScale: xScale,\n      xAccessor: function xAccessor(d) {\n        return d && indexAccessor(d).index;\n      },\n      displayXAccessor: realDateAccessor(inputDateAccessor)\n    };\n  };\n  discontinuousTimeScaleProvider.initialIndex = function (x) {\n    if (!arguments.length) {\n      return initialIndex;\n    }\n    initialIndex = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.inputDateAccessor = function (x) {\n    if (!arguments.length) {\n      return inputDateAccessor;\n    }\n    inputDateAccessor = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.indexAccessor = function (x) {\n    if (!arguments.length) {\n      return indexAccessor;\n    }\n    indexAccessor = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.indexMutator = function (x) {\n    if (!arguments.length) {\n      return indexMutator;\n    }\n    indexMutator = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.withIndex = function (x) {\n    if (!arguments.length) {\n      return withIndex;\n    }\n    withIndex = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.utc = function () {\n    realDateAccessor = function realDateAccessor(dateAccessor) {\n      return function (d) {\n        var date = dateAccessor(d);\n        // The getTimezoneOffset() method returns the time-zone offset from UTC, in minutes, for the current locale.\n        var offsetInMillis = date.getTimezoneOffset() * 60 * 1000;\n        return new Date(date.getTime() + offsetInMillis);\n      };\n    };\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.setLocale = function (locale) {\n    var formatters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (locale) {\n      (0, _d3TimeFormat.timeFormatDefaultLocale)(locale);\n    }\n    if (formatters) {\n      currentFormatters = formatters;\n    }\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.indexCalculator = function () {\n    return doStuff(realDateAccessor, inputDateAccessor, initialIndex, currentFormatters);\n  };\n  return discontinuousTimeScaleProvider;\n}\n\n/* discontinuousTimeScaleProvider.utc = function(data,\n\t\tdateAccessor,\n\t\tindexAccessor,\n\t\tindexMutator) {\n\tvar utcDateAccessor = d => {\n\t\tvar date = dateAccessor(d);\n\t\t// The getTimezoneOffset() method returns the time-zone offset from UTC, in minutes, for the current locale.\n\t\tvar offsetInMillis = date.getTimezoneOffset() * 60 * 1000;\n\t\treturn new Date(date.getTime() + offsetInMillis);\n\t};\n\treturn discontinuousTimeScaleProvider(data, utcDateAccessor, indexAccessor, indexMutator);\n};*/\n\nexports.default = discontinuousTimeScaleProviderBuilder();","map":{"version":3,"names":["discontinuousTimeScaleProviderBuilder","_d3TimeFormat","require","_financeDiscontinuousScale","_utils","_levels","evaluateLevel","d","date","i","formatters","levelDefinition","map","eachLevel","idx","level","length","format","find","l","discontinuousIndexCalculator","slidingWindow","windowSize","undefinedValue","_ref","initialIndex","row","getTime","startOf30Seconds","startOfMinute","startOf5Minutes","startOf15Minutes","startOf30Minutes","startOfHour","startOfEighthOfADay","startOfQuarterDay","startOfHalfDay","startOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","_extends","index","discontinuousIndexCalculatorLocalTime","accumulator","_ref2","_ref3","_ref4","_slicedToArray","prevDate","nowDate","getSeconds","getMinutes","getHours","getDay","getMonth","getFullYear","console","log","doStuff","realDateAccessor","inputDateAccessor","data","dateAccessor","calculate","source","misc","each","Date","timeFormat","identity","indexAccessor","indexMutator","withIndex","currentFormatters","defaultFormatters","discontinuousTimeScaleProvider","isNotDefined","response","inputIndex","xScale","_financeDiscontinuousScale2","default","mergedData","zipper","combine","finalData","xAccessor","displayXAccessor","x","arguments","utc","offsetInMillis","getTimezoneOffset","setLocale","locale","undefined","timeFormatDefaultLocale","indexCalculator"],"sources":["D:\\FUN\\Full-Stack\\ecommerce\\frontend\\node_modules\\src\\lib\\scale\\discontinuousTimeScaleProvider.js"],"sourcesContent":["\n\nimport { timeFormat, timeFormatDefaultLocale } from \"d3-time-format\";\n// import { map as d3Map } from \"d3-collection\";\n\nimport financeDiscontinuousScale from \"./financeDiscontinuousScale\";\nimport { slidingWindow, zipper, identity, isNotDefined } from \"../utils\";\nimport { defaultFormatters, levelDefinition } from \"./levels\";\n\nfunction evaluateLevel(d, date, i, formatters) {\n\treturn levelDefinition\n\t\t.map((eachLevel, idx) => {\n\t\t\treturn {\n\t\t\t\tlevel: levelDefinition.length - idx - 1,\n\t\t\t\tformat: formatters[eachLevel(d, date, i)]\n\t\t\t};\n\t\t})\n\t\t.find(l => !!l.format);\n}\n\nconst discontinuousIndexCalculator = slidingWindow()\n\t.windowSize(2)\n\t.undefinedValue((d, idx, { initialIndex, formatters }) => {\n\t\tconst i = initialIndex;\n\t\tconst row = {\n\t\t\tdate: d.getTime(),\n\t\t\tstartOf30Seconds: false,\n\t\t\tstartOfMinute: false,\n\t\t\tstartOf5Minutes: false,\n\t\t\tstartOf15Minutes: false,\n\t\t\tstartOf30Minutes: false,\n\t\t\tstartOfHour: false,\n\t\t\tstartOfEighthOfADay: false,\n\t\t\tstartOfQuarterDay: false,\n\t\t\tstartOfHalfDay: false,\n\t\t\tstartOfDay: true,\n\t\t\tstartOfWeek: false,\n\t\t\tstartOfMonth: false,\n\t\t\tstartOfQuarter: false,\n\t\t\tstartOfYear: false,\n\t\t};\n\t\tconst level = evaluateLevel(row, d, i, formatters);\n\t\treturn { ...row, index: i, ...level };\n\t});\n\nconst discontinuousIndexCalculatorLocalTime = discontinuousIndexCalculator\n\t.accumulator(([prevDate, nowDate], i, idx, { initialIndex, formatters }) => {\n\t\tconst startOf30Seconds = nowDate.getSeconds() % 30 === 0;\n\n\t\tconst startOfMinute = nowDate.getMinutes() !== prevDate.getMinutes();\n\t\tconst startOf5Minutes = startOfMinute && nowDate.getMinutes() % 5 <= prevDate.getMinutes() % 5;\n\t\tconst startOf15Minutes = startOfMinute && nowDate.getMinutes() % 15 <= prevDate.getMinutes() % 15;\n\t\tconst startOf30Minutes = startOfMinute && nowDate.getMinutes() % 30 <= prevDate.getMinutes() % 30;\n\n\t\tconst startOfHour = nowDate.getHours() !== prevDate.getHours();\n\n\t\tconst startOfEighthOfADay = startOfHour && nowDate.getHours() % 3 === 0;\n\t\tconst startOfQuarterDay = startOfHour && nowDate.getHours() % 6 === 0;\n\t\tconst startOfHalfDay = startOfHour && nowDate.getHours() % 12 === 0;\n\n\t\tconst startOfDay = nowDate.getDay() !== prevDate.getDay();\n\t\t// According to ISO calendar\n\t\t// Sunday = 0, Monday = 1, ... Saturday = 6\n\t\t// day of week of today < day of week of yesterday then today is start of week\n\t\tconst startOfWeek = nowDate.getDay() < prevDate.getDay();\n\t\t// month of today != month of yesterday then today is start of month\n\t\tconst startOfMonth = nowDate.getMonth() !== prevDate.getMonth();\n\t\t// if start of month and month % 3 === 0 then it is start of quarter\n\t\tconst startOfQuarter = startOfMonth && (nowDate.getMonth() % 3 <= prevDate.getMonth() % 3);\n\t\t// year of today != year of yesterday then today is start of year\n\t\tconst startOfYear = nowDate.getFullYear() !== prevDate.getFullYear();\n\n\t\tconst row = {\n\t\t\tdate: nowDate.getTime(),\n\t\t\tstartOf30Seconds,\n\t\t\tstartOfMinute,\n\t\t\tstartOf5Minutes,\n\t\t\tstartOf15Minutes,\n\t\t\tstartOf30Minutes,\n\t\t\tstartOfHour,\n\t\t\tstartOfEighthOfADay,\n\t\t\tstartOfQuarterDay,\n\t\t\tstartOfHalfDay,\n\t\t\tstartOfDay,\n\t\t\tstartOfWeek,\n\t\t\tstartOfMonth,\n\t\t\tstartOfQuarter,\n\t\t\tstartOfYear,\n\t\t};\n\t\tconst level = evaluateLevel(row, nowDate, i, formatters);\n\t\tif (level == null) {\n\t\t\tconsole.log(row);\n\t\t}\n\t\treturn { ...row, index: i + initialIndex, ...level };\n\t});\n\nfunction doStuff(realDateAccessor, inputDateAccessor, initialIndex, formatters) {\n\treturn function(data) {\n\t\tconst dateAccessor = realDateAccessor(inputDateAccessor);\n\t\tconst calculate = discontinuousIndexCalculatorLocalTime\n\t\t\t.source(dateAccessor)\n\t\t\t.misc({ initialIndex, formatters });\n\n\t\tconst index = calculate(data).map(each => {\n\t\t\tconst { format } = each;\n\t\t\treturn {\n\t\t\t\t// ...each,\n\t\t\t\tindex: each.index,\n\t\t\t\tlevel: each.level,\n\t\t\t\tdate: new Date(each.date),\n\t\t\t\tformat: timeFormat(format),\n\t\t\t};\n\t\t});\n\t\t/*\n\t\tvar map = d3Map();\n\t\tfor (var i = 0; i < data.length - 1; i++) {\n\n\t\t\tvar nextDate = dateAccessor(data[i + 1]);\n\t\t\tvar nowDate = dateAccessor(data[i]);\n\t\t\tvar diff = nextDate - nowDate;\n\n\t\t\tif (map.has(diff)) {\n\t\t\t\tvar count = parseInt(map.get(diff), 10) + 1;\n\t\t\t\tmap.set(diff, count);\n\t\t\t} else {\n\t\t\t\tmap.set(diff, 1);\n\t\t\t}\n\t\t}\n\n\t\tvar entries = map.entries().sort((a, b) => a.value < b.value);\n\n\t\t// For Renko/p&f\n\n\t\tvar interval = entries[0].value === 1\n\t\t\t? Math.round((dateAccessor(last(data)) - dateAccessor(head(data))) / data.length)\n\t\t\t: parseInt(entries[0].key, 10); */\n\n\t\t// return { index, interval };\n\t\treturn { index };\n\t};\n}\n\nexport function discontinuousTimeScaleProviderBuilder() {\n\tlet initialIndex = 0, realDateAccessor = identity;\n\tlet inputDateAccessor = d => d.date,\n\t\tindexAccessor = d => d.idx,\n\t\tindexMutator = (d, idx) => ({ ...d, idx }),\n\t\twithIndex;\n\n\tlet currentFormatters = defaultFormatters;\n\n\t// eslint-disable-next-line prefer-const\n\tlet discontinuousTimeScaleProvider = function(data) {\n\t\t/*\n\t\tconsole.warn(\"Are you sure you want to use a discontinuousTimeScale?\"\n\t\t\t+ \" Use this only if you have discontinuous data which\"\n\t\t\t+ \" needs to be displayed as continuous.\"\n\t\t\t+ \" If you have continuous data use a d3 scale like\"\n\t\t\t+ \" `d3.scaleTime`\"\n\t\t);\n\t\t*/\n\n\t\tlet index = withIndex;\n\n\t\tif (isNotDefined(index)) {\n\t\t\tconst response = doStuff(\n\t\t\t\trealDateAccessor,\n\t\t\t\tinputDateAccessor,\n\t\t\t\tinitialIndex,\n\t\t\t\tcurrentFormatters\n\t\t\t)(data);\n\n\t\t\tindex = response.index;\n\t\t}\n\t\t// console.log(interval, entries[0].key);\n\n\t\tconst inputIndex = index;\n\t\tconst xScale = financeDiscontinuousScale(\n\t\t\tinputIndex,\n\t\t);\n\n\t\tconst mergedData = zipper()\n\t\t\t.combine(indexMutator);\n\n\t\tconst finalData = mergedData(data, inputIndex);\n\n\t\treturn {\n\t\t\tdata: finalData,\n\t\t\txScale,\n\t\t\txAccessor: d => d && indexAccessor(d).index,\n\t\t\tdisplayXAccessor: realDateAccessor(inputDateAccessor),\n\t\t};\n\t};\n\n\tdiscontinuousTimeScaleProvider.initialIndex = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn initialIndex;\n\t\t}\n\t\tinitialIndex = x;\n\t\treturn discontinuousTimeScaleProvider;\n\t};\n\tdiscontinuousTimeScaleProvider.inputDateAccessor = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn inputDateAccessor;\n\t\t}\n\t\tinputDateAccessor = x;\n\t\treturn discontinuousTimeScaleProvider;\n\t};\n\tdiscontinuousTimeScaleProvider.indexAccessor = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn indexAccessor;\n\t\t}\n\t\tindexAccessor = x;\n\t\treturn discontinuousTimeScaleProvider;\n\t};\n\tdiscontinuousTimeScaleProvider.indexMutator = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn indexMutator;\n\t\t}\n\t\tindexMutator = x;\n\t\treturn discontinuousTimeScaleProvider;\n\t};\n\tdiscontinuousTimeScaleProvider.withIndex = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn withIndex;\n\t\t}\n\t\twithIndex = x;\n\t\treturn discontinuousTimeScaleProvider;\n\t};\n\tdiscontinuousTimeScaleProvider.utc = function() {\n\t\trealDateAccessor = dateAccessor => d => {\n\t\t\tconst date = dateAccessor(d);\n\t\t\t// The getTimezoneOffset() method returns the time-zone offset from UTC, in minutes, for the current locale.\n\t\t\tconst offsetInMillis = date.getTimezoneOffset() * 60 * 1000;\n\t\t\treturn new Date(date.getTime() + offsetInMillis);\n\t\t};\n\t\treturn discontinuousTimeScaleProvider;\n\t};\n\tdiscontinuousTimeScaleProvider.setLocale = function(locale, formatters = null) {\n\t\tif (locale) {\n\t\t\ttimeFormatDefaultLocale(locale);\n\t\t}\n\t\tif (formatters) {\n\t\t\tcurrentFormatters = formatters;\n\t\t}\n\t\treturn discontinuousTimeScaleProvider;\n\t};\n\n\tdiscontinuousTimeScaleProvider.indexCalculator = function() {\n\t\treturn doStuff(realDateAccessor, inputDateAccessor, initialIndex, currentFormatters);\n\t};\n\n\treturn discontinuousTimeScaleProvider;\n}\n\n\n\n/* discontinuousTimeScaleProvider.utc = function(data,\n\t\tdateAccessor,\n\t\tindexAccessor,\n\t\tindexMutator) {\n\tvar utcDateAccessor = d => {\n\t\tvar date = dateAccessor(d);\n\t\t// The getTimezoneOffset() method returns the time-zone offset from UTC, in minutes, for the current locale.\n\t\tvar offsetInMillis = date.getTimezoneOffset() * 60 * 1000;\n\t\treturn new Date(date.getTime() + offsetInMillis);\n\t};\n\treturn discontinuousTimeScaleProvider(data, utcDateAccessor, indexAccessor, indexMutator);\n};*/\n\nexport default discontinuousTimeScaleProviderBuilder();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}