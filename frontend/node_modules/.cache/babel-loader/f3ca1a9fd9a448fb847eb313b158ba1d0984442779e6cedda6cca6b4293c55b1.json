{"ast":null,"code":"var _jsxFileName = \"D:\\\\FUN\\\\Full-Stack\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\TradingBotScreen.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { Row, Button } from 'react-bootstrap';\nimport SecTradingAccount from '../components/SecTradingAccount';\nimport SecTradingSession from '../components/SecTradingSession';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TradingBotScreen() {\n  _s();\n  // DEBUG\n  const storeState = useSelector(state => state);\n  const printStoreState = () => {\n    console.log(\"store state: \");\n    console.log(storeState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-2\",\n      children: /*#__PURE__*/_jsxDEV(SecTradingAccount, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-2\",\n      children: /*#__PURE__*/_jsxDEV(SecTradingSession, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-2\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        className: \"float-end rounded\",\n        onClick: printStoreState,\n        children: \"print state\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 6\n  }, this);\n}\n_s(TradingBotScreen, \"wTk9YUu+WCDKGbhexElvfTGhSt0=\", false, function () {\n  return [useSelector];\n});\n_c = TradingBotScreen;\nexport default TradingBotScreen;\n\n// const params = useParams();\n// const dispatch = useDispatch();\n// const tradingData = useSelector(state => state.tradingData);\n// const { loading, data,  id} = tradingData;\n// // Save ape anche secret key \n// const [apiKey, setApiKey] = useState('');\n// const [secretKey, setSecretKey] = useState('');\n// const [_id, setId] = useState('');\n// const [submit, setSubmit] = useState(false);   \n// const handleSubmit = () => {\n//   if ( _id !== ''){\n//     setSubmit(true)\n//     dispatch(tradingBot(_id))\n//     console.log(data)\n//   }\n// }\n// /* DataDisplay */\n// const DataDisplay = () => {\n//   return (\n//     submit ? \n//       loading ? <Loader /> \n//         : <Col className='p-2 justify-content-end' lg={4} md={4} sm={12} xs={12}>\n//             <Form.Control                \n//               className='rounded m-2 text-white'                \n//               value={\"Avg Buy Price: \" + data.avgBuyPrice}  \n//               readOnly \n//               plaintext \n//             />\n//             <Form.Control                \n//               className='rounded m-2 text-white'                \n//               value={\"Avg Sell Price: \" + data.avgSellPrice}  \n//               readOnly   \n//               plaintext           \n//             />\n//             <Form.Control                \n//               className='rounded m-2 text-white'                \n//               value={\"Balance Asset: \" + data.balanceAsset}  \n//               readOnly     \n//               plaintext         \n//             />\n//             <Form.Control                \n//               className='rounded m-2 text-white'                \n//               value={\"balance Stable: \" + data.balanceStable}  \n//               readOnly  \n//               plaintext            \n//             />\n//             <Form.Control                \n//               className='rounded m-2 text-white'                \n//               value={\"Close: \" + data.close}  \n//               readOnly    \n//               plaintext          \n//             />\n//             <Form.Control                \n//               className='rounded m-2 text-white'                \n//               value={\"RSI 2: \" + data.rsiTwo}  \n//               readOnly              \n//               plaintext\n//             />\n//           </Col>\n//     : <div></div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"TradingBotScreen\");","map":{"version":3,"names":["useSelector","Row","Button","SecTradingAccount","SecTradingSession","jsxDEV","_jsxDEV","TradingBotScreen","_s","storeState","state","printStoreState","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["D:/FUN/Full-Stack/ecommerce/frontend/src/screens/TradingBotScreen.js"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { Row, Button } from 'react-bootstrap'\r\nimport SecTradingAccount from '../components/SecTradingAccount'\r\nimport SecTradingSession from '../components/SecTradingSession';\r\n\r\n\r\nfunction TradingBotScreen() {  \r\n\r\n  // DEBUG\r\n  const storeState = useSelector(state => state);\r\n  const printStoreState = () => {\r\n    console.log(\"store state: \")\r\n    console.log(storeState)\r\n  }  \r\n\r\n  return (\r\n     <div>\r\n        <Row className='py-2'>\r\n          <SecTradingAccount></SecTradingAccount>   \r\n        </Row>\r\n\r\n        <Row className='py-2'>\r\n          <SecTradingSession></SecTradingSession>     \r\n        </Row>\r\n\r\n        <Row className='py-2'>\r\n          <Button \r\n            variant=\"secondary\" \r\n            className=\"float-end rounded\"                                            \r\n            onClick={printStoreState}\r\n          >\r\n            print state\r\n          </Button>                         \r\n        </Row>       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TradingBotScreen\r\n\r\n\r\n\r\n  // const params = useParams();\r\n  // const dispatch = useDispatch();\r\n  // const tradingData = useSelector(state => state.tradingData);\r\n  // const { loading, data,  id} = tradingData;\r\n  // // Save ape anche secret key \r\n  // const [apiKey, setApiKey] = useState('');\r\n  // const [secretKey, setSecretKey] = useState('');\r\n  // const [_id, setId] = useState('');\r\n  // const [submit, setSubmit] = useState(false);   \r\n  // const handleSubmit = () => {\r\n  //   if ( _id !== ''){\r\n  //     setSubmit(true)\r\n  //     dispatch(tradingBot(_id))\r\n  //     console.log(data)\r\n  //   }\r\n  // }\r\n  // /* DataDisplay */\r\n  // const DataDisplay = () => {\r\n  //   return (\r\n  //     submit ? \r\n  //       loading ? <Loader /> \r\n  //         : <Col className='p-2 justify-content-end' lg={4} md={4} sm={12} xs={12}>\r\n  //             <Form.Control                \r\n  //               className='rounded m-2 text-white'                \r\n  //               value={\"Avg Buy Price: \" + data.avgBuyPrice}  \r\n  //               readOnly \r\n  //               plaintext \r\n  //             />\r\n  //             <Form.Control                \r\n  //               className='rounded m-2 text-white'                \r\n  //               value={\"Avg Sell Price: \" + data.avgSellPrice}  \r\n  //               readOnly   \r\n  //               plaintext           \r\n  //             />\r\n  //             <Form.Control                \r\n  //               className='rounded m-2 text-white'                \r\n  //               value={\"Balance Asset: \" + data.balanceAsset}  \r\n  //               readOnly     \r\n  //               plaintext         \r\n  //             />\r\n  //             <Form.Control                \r\n  //               className='rounded m-2 text-white'                \r\n  //               value={\"balance Stable: \" + data.balanceStable}  \r\n  //               readOnly  \r\n  //               plaintext            \r\n  //             />\r\n  //             <Form.Control                \r\n  //               className='rounded m-2 text-white'                \r\n  //               value={\"Close: \" + data.close}  \r\n  //               readOnly    \r\n  //               plaintext          \r\n  //             />\r\n  //             <Form.Control                \r\n  //               className='rounded m-2 text-white'                \r\n  //               value={\"RSI 2: \" + data.rsiTwo}  \r\n  //               readOnly              \r\n  //               plaintext\r\n  //             />\r\n  //           </Col>\r\n  //     : <div></div>\r\n  //   );\r\n  // }"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,GAAG,EAAEC,MAAM,QAAQ,iBAAiB;AAC7C,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,iBAAiB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhE,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAE1B;EACA,MAAMC,UAAU,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAAC;EAC9C,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EACzB,CAAC;EAED,oBACGH,OAAA;IAAAQ,QAAA,gBACGR,OAAA,CAACL,GAAG;MAACc,SAAS,EAAC,MAAM;MAAAD,QAAA,eACnBR,OAAA,CAACH,iBAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAqB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC,eAENb,OAAA,CAACL,GAAG;MAACc,SAAS,EAAC,MAAM;MAAAD,QAAA,eACnBR,OAAA,CAACF,iBAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAqB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC,eAENb,OAAA,CAACL,GAAG;MAACc,SAAS,EAAC,MAAM;MAAAD,QAAA,eACnBR,OAAA,CAACJ,MAAM;QACLkB,OAAO,EAAC,WAAW;QACnBL,SAAS,EAAC,mBAAmB;QAC7BM,OAAO,EAAEV,eAAgB;QAAAG,QAAA,EAC1B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAACX,EAAA,CA9BQD,gBAAgB;EAAA,QAGJP,WAAW;AAAA;AAAAsB,EAAA,GAHvBf,gBAAgB;AAgCzB,eAAeA,gBAAgB;;AAI7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}