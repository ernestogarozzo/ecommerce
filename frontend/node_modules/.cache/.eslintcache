[{"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\App.js":"2","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\products.js":"7","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Product.js":"8","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\store.js":"11","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\reducers\\productReducers.js":"12","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Message.js":"16","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\actions\\cartActions.js":"20"},{"size":630,"mtime":1672420736696,"results":"21","hashOfConfig":"22"},{"size":852,"mtime":1672858719740,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1669135692672,"results":"24","hashOfConfig":"22"},{"size":1202,"mtime":1672762184781,"results":"25","hashOfConfig":"22"},{"size":356,"mtime":1669138486140,"results":"26","hashOfConfig":"22"},{"size":1081,"mtime":1672958959971,"results":"27","hashOfConfig":"22"},{"size":2686,"mtime":1669546408865,"results":"28","hashOfConfig":"29"},{"size":877,"mtime":1669312482887,"results":"30","hashOfConfig":"22"},{"size":1299,"mtime":1669200619352,"results":"31","hashOfConfig":"22"},{"size":3327,"mtime":1672858536869,"results":"32","hashOfConfig":"22"},{"size":845,"mtime":1672846193642,"results":"33","hashOfConfig":"22"},{"size":1217,"mtime":1672759718109,"results":"34","hashOfConfig":"22"},{"size":1532,"mtime":1672163112443,"results":"35","hashOfConfig":"22"},{"size":1381,"mtime":1672844984325,"results":"36","hashOfConfig":"22"},{"size":477,"mtime":1672309722816,"results":"37","hashOfConfig":"22"},{"size":245,"mtime":1672846248678,"results":"38","hashOfConfig":"22"},{"size":4576,"mtime":1672858714756,"results":"39","hashOfConfig":"22"},{"size":1545,"mtime":1672847810819,"results":"40","hashOfConfig":"22"},{"size":294,"mtime":1672763695694,"results":"41","hashOfConfig":"22"},{"size":898,"mtime":1672847995007,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1gw755r",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1ph7f80",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\index.js",[],["92","93"],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\App.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Header.js",["94"],"import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n          <Container>\r\n\r\n            <LinkContainer to={'/'} >\r\n              <Navbar.Brand >CSR Boutique</Navbar.Brand>\r\n            </LinkContainer>\r\n\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"me-auto\">\r\n\r\n                <LinkContainer to=\"/cart\">\r\n                  <Nav.Link ><i className='fas fa-shopping-cart'></i>  Carrello</Nav.Link>\r\n                </LinkContainer>\r\n\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link ><i className='fas fa-user'></i>  Accedi</Nav.Link>\r\n                </LinkContainer>\r\n              </Nav>\r\n\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\screens\\HomeScreen.js",["95"],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\products.js",[],[],[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\screens\\ProductScreen.js",["96","97"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams, useNavigate, createSearchParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Button, Form, ListGroupItem } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\n\r\nfunction ProductScreen({ }) {\r\n  const [qty, setQty] = useState(1);\r\n  const params = useParams();\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector(state => state.productDetails);\r\n  const { product } = productDetails;\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(`${params.id}`))\r\n\r\n  }, [dispatch, params])\r\n\r\n\r\n\r\n  const addToCartEventHandler = ((id, qty) => {\r\n    navigate(`/cart/${id}`, { state: qty })\r\n\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/' className='btn btn-light my-3'>Indietro</Link>\r\n      <h1>{product.name}</h1>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} />\r\n        </Col>\r\n\r\n        <Col md={3}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h5>{product.description}</h5>\r\n            </ListGroup.Item>\r\n\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={3}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroupItem>\r\n              <Row>\r\n                <Col>Price:</Col>\r\n                <Col>${product.price}</Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n\r\n            <ListGroupItem>\r\n              <Row>\r\n                <Col>Status:</Col>\r\n                <Col>{product.countInStock > 1 ? 'Disponibile' : 'Esaurito'}</Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n\r\n            {product.countInStock > 0 && (\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Qty</Col>\r\n                  <Col xs='auto' className='my-1'>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={qty}\r\n                      onChange={(e) => setQty(e.target.value)}\r\n                    >\r\n                      {\r\n\r\n                        [...Array(product.countInStock).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))\r\n                      }\r\n\r\n                    </Form.Control>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            )}\r\n\r\n            <ListGroupItem>\r\n              <Row>\r\n                <Button className='btn-block'\r\n                  onClick={() => addToCartEventHandler(`${params.id}`, qty)}\r\n                  type='button' disabled={\r\n                    product.countInStock === 0}>Aggiungi al carrello</Button>\r\n              </Row>\r\n            </ListGroupItem>\r\n\r\n\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\store.js",["98"],"import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = configureStore({\r\n    reducer: reducer,\r\n    preloadedState: initialState,\r\n    middleware: middleware,\r\n});\r\n\r\n\r\nexport default store ","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\actions\\productActions.js",["99"],"import axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\screens\\CartScreen.js",["100"],"import React, { useEffect } from 'react';\r\nimport { Link, useParams, useLocation } from 'react-router-dom';\r\nimport { Card, Row, Col, Image, ListGroup, Button, Form, ListGroupItem } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { Message } from '../components/Message';\r\n\r\nexport default function CartScreen() {\r\n    const params = useParams();\r\n    const location = useLocation()\r\n    const productId = params.id\r\n    const qty = location.state ? Number(location.state) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    console.log('cartItem:', cartItems)\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Carrello</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Non hai prodotti nel carrello <Link to='/'>Indietro</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n\r\n                                        >\r\n                                            <i className='fas fa-trash' onClick={() => removeFromCartHandler(item.product)}></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotale ({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n\r\n                        >\r\n                            Completa l'acquisto\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n}","C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Utente\\Desktop\\ecommerce\\frontend\\src\\actions\\cartActions.js",["101"],"import axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM\r\n\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":21,"column":6,"nodeType":"112","endLine":21,"endColumn":8,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"114","line":2,"column":40,"nodeType":"108","messageId":"109","endLine":2,"endColumn":58},{"ruleId":"115","severity":1,"message":"116","line":9,"column":24,"nodeType":"117","messageId":"118","endLine":9,"endColumn":27},{"ruleId":"106","severity":1,"message":"119","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":29},{"ruleId":"106","severity":1,"message":"120","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":19},{"ruleId":"106","severity":1,"message":"121","line":3,"column":58,"nodeType":"108","messageId":"109","endLine":3,"endColumn":71},{"ruleId":"106","severity":1,"message":"120","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":19},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["124"],"'createSearchParams' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'composeWithDevTools' is defined but never used.","'useParams' is defined but never used.","'ListGroupItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [dispatch]",{"range":"127","text":"128"},[577,579],"[dispatch]"]